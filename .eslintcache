[{"/home/matoni/code/matoni109/react-food-order-app/src/index.js":"1","/home/matoni/code/matoni109/react-food-order-app/src/App.js":"2","/home/matoni/code/matoni109/react-food-order-app/src/components/Layout/Header.js":"3","/home/matoni/code/matoni109/react-food-order-app/src/components/Layout/HeaderCartButton.js":"4","/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/CartIcon.js":"5","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/Meals.js":"6","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/AvailableMeals.js":"7","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealsSummary.js":"8","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealItem.js":"9","/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Card.js":"10","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealItemForm.js":"11","/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Input.js":"12","/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/Cart.js":"13","/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Modal.js":"14","/home/matoni/code/matoni109/react-food-order-app/src/store/cart-provider.js":"15","/home/matoni/code/matoni109/react-food-order-app/src/store/cart-context.js":"16","/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/CartItem.js":"17","/home/matoni/code/matoni109/react-food-order-app/src/hooks/use-http.js":"18","/home/matoni/code/matoni109/react-food-order-app/src/components/Checkout/Checkout.js":"19","/home/matoni/code/matoni109/react-food-order-app/src/hooks/use-input.js":"20"},{"size":142,"mtime":1616594953000,"results":"21","hashOfConfig":"22"},{"size":825,"mtime":1619920540377,"results":"23","hashOfConfig":"22"},{"size":811,"mtime":1619733887354,"results":"24","hashOfConfig":"22"},{"size":1189,"mtime":1619924570012,"results":"25","hashOfConfig":"22"},{"size":488,"mtime":1619420654217,"results":"26","hashOfConfig":"22"},{"size":218,"mtime":1619422194982,"results":"27","hashOfConfig":"22"},{"size":2754,"mtime":1620534334773,"results":"28","hashOfConfig":"22"},{"size":529,"mtime":1619421652603,"results":"29","hashOfConfig":"22"},{"size":883,"mtime":1619766989656,"results":"30","hashOfConfig":"22"},{"size":218,"mtime":1619504869715,"results":"31","hashOfConfig":"22"},{"size":1669,"mtime":1619766538814,"results":"32","hashOfConfig":"22"},{"size":332,"mtime":1619766117064,"results":"33","hashOfConfig":"22"},{"size":4647,"mtime":1620621407652,"results":"34","hashOfConfig":"22"},{"size":761,"mtime":1619733887354,"results":"35","hashOfConfig":"22"},{"size":4808,"mtime":1620621333472,"results":"36","hashOfConfig":"22"},{"size":221,"mtime":1619733887354,"results":"37","hashOfConfig":"22"},{"size":710,"mtime":1619920668225,"results":"38","hashOfConfig":"22"},{"size":1024,"mtime":1620528243130,"results":"39","hashOfConfig":"22"},{"size":4212,"mtime":1620615685938,"results":"40","hashOfConfig":"22"},{"size":1393,"mtime":1620535296960,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"libzjm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/matoni/code/matoni109/react-food-order-app/src/index.js",[],["88","89"],"/home/matoni/code/matoni109/react-food-order-app/src/App.js",["90"],"import React, { useRef, useState } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport CartProvider from \"./store/cart-provider\";\n\nconst App = () => {\n  // const ammountInputRef = useRef();\n\n  const [cart, setCart] = useState();\n\n  const modalHandler = () => {\n    setCart((cart) => !cart);\n  };\n\n  // function for onClick Cart\n  // const submitHandler = (event) => {\n  //   event.preventDefault();\n\n  //   // setEnteredTitle(\"\");\n  //   // setAge(\"\");\n  //   ammountInputRef.current.value = \"\";\n  // };\n\n  return (\n    <CartProvider>\n      {cart && <Cart onClick={modalHandler} />}\n\n      <Header onClick={modalHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n};\n\nexport default App;\n","/home/matoni/code/matoni109/react-food-order-app/src/components/Layout/Header.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Layout/HeaderCartButton.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/CartIcon.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/Meals.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/AvailableMeals.js",["91","92"],"import React, { useContext, useState, useEffect } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem\";\nimport Card from \"../UI/Card\";\nimport CartContext from \"../../store/cart-context\";\nimport useHttp from \"../../hooks/use-http\";\n\n// const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\nconst AvailableMeals = (props) => {\n  // const cartAdditionHandler = (cartItem) => {\n  //   cartCtx.addItem(cartItem);\n  // };\n\n  // const mealsList = DUMMY_MEALS.map((meal, index) => {\n  //   return (\n  //     <>\n  //       <MealItem\n  //         id={meal.id} // this is new!\n  //         name={meal.name}\n  //         description={meal.description}\n  //         price={meal.price}\n  //         key={meal.id}\n  //         addItem={cartAdditionHandler}\n  //       />\n  //     </>\n  //   );\n  // });\n\n  // set state\n  const [meals, setMeals] = useState([]);\n\n  // fetch meals from firebase\n  const httpData = useHttp();\n\n  const { isLoading, error, sendRequest: fetchMeals } = httpData;\n\n  useEffect(() => {\n    const loadMeals = (taskObj) => {\n      const loadedTasks = [];\n\n      taskObj.map((meal) => loadedTasks.push(meal));\n      // for (const taskKey in taskObj) {\n      //   loadedTasks.push({ id: taskKey, description: taskObj[taskKey].text });\n      // }\n      setMeals(loadedTasks);\n    };\n    fetchMeals(\n      {\n        url:\n          \"https://react-db-api-default-rtdb.asia-southeast1.firebasedatabase.app/menuItems.json\",\n      },\n      loadMeals\n    );\n  }, [fetchMeals]);\n\n  if (error) {\n    return (\n      <Card key={1} className={classes.meals}>\n        <h2 className={classes.meals}>That's a Fail</h2>\n      </Card>\n    );\n  }\n\n  return (\n    <Card key={1} className={classes.meals}>\n      {isLoading ? (\n        <h2>Loading...</h2>\n      ) : (\n        <ul>\n          {meals.map((meal, index) => {\n            return (\n              <MealItem\n                id={meal.id} // this is new!\n                name={meal.name}\n                description={meal.description}\n                price={meal.price}\n                loading={isLoading}\n                error={error}\n                key={index.toString()}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </Card>\n  );\n};\n\nexport default AvailableMeals;\n","/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealsSummary.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealItem.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Card.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Meals/MealItemForm.js",["93"],"import React, { useRef, useState } from \"react\";\nimport Input from \"../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport CartContext from \"../../store/cart-context\";\n\nconst MealItemForm = (props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  // use refs to get the info not below ( update input element )\n  const amountInputRef = useRef();\n  // const submitHandler = (event) => {\n  //   event.preventDefault();\n\n  //   const mealID = event.target.form[0].attributes[0].value;\n  //   const amount = event.target.form[0].value;\n  //   console.log(event);\n  //   const mealData = {\n  //     id: mealID,\n  //     amount: +amount,\n  //   };\n  //   props.addItem(mealData);\n  // };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 5\n    ) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    // props.addItem(mealData);\n    props.addItem(enteredAmountNumber);\n  };\n  //\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <Input\n        label=\"Amount\"\n        ref={amountInputRef}\n        input={{\n          id: \"amount_\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\",\n        }}\n      />\n      <button type=\"submit\" onClick={submitHandler}>\n        + Add\n      </button>\n      {!amountIsValid && <p>Please entere a valid amount 1-5 </p>}\n    </form>\n  );\n};\n\nexport default MealItemForm;\n","/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Input.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/Cart.js",["94","95"],"/home/matoni/code/matoni109/react-food-order-app/src/components/UI/Modal.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/store/cart-provider.js",["96"],"/home/matoni/code/matoni109/react-food-order-app/src/store/cart-context.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Cart/CartItem.js",["97"],"import React, { useContext } from \"react\";\n// import CartContext from \"../../store/cart-context\";\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","/home/matoni/code/matoni109/react-food-order-app/src/hooks/use-http.js",[],"/home/matoni/code/matoni109/react-food-order-app/src/components/Checkout/Checkout.js",["98","99"],"import React from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport useInput from \"../../hooks/use-input\";\n// import classNames from \"classnames/bind\";\n// https://stackoverflow.com/questions/34521797/how-to-add-multiple-classes-to-a-reactjs-component\n// let cx = classNames.bind(classes);\n\nconst Checkout = (props) => {\n  const closeForm = (event) => {\n    props.onCancel();\n  };\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !setEnteredNameIsValid ||\n      !setEnteredStreetIsValid ||\n      !setEnteredPostIsValid ||\n      !setEnteredCityIsValid\n    ) {\n      return;\n    }\n    const values = {\n      name: enteredName,\n      street: enteredStreet,\n      postCode: enteredPost,\n      city: enteredCity,\n    };\n    resetNameInput();\n    resetStreetInput();\n    resetPostInput();\n    resetCityInput();\n\n    props.onOrder({\n      name: enteredName,\n      street: enteredStreet,\n      postCode: enteredPost,\n      city: enteredCity,\n    });\n  };\n\n  // inputs\n\n  const {\n    value: enteredName,\n    isValid: setEnteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n    // passes the value as a function below...\n    // mind bending hey..\n    // yep\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredStreet,\n    isValid: setEnteredStreetIsValid,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangedHandler,\n    inputBlurHandler: streetBlurHandler,\n    reset: resetStreetInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredPost,\n    isValid: setEnteredPostIsValid,\n    hasError: postInputHasError,\n    valueChangeHandler: postChangedHandler,\n    inputBlurHandler: postBlurHandler,\n    reset: resetPostInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredCity,\n    isValid: setEnteredCityIsValid,\n    hasError: cityInputHasError,\n    valueChangeHandler: cityChangedHandler,\n    inputBlurHandler: cityBlurHandler,\n    reset: resetCityInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  /// css bit\n  const nameInputClasses = nameInputHasError ? classes[\"invalid\"] : \"\";\n  const streetInputClasses = streetInputHasError ? classes[\"invalid\"] : \"\";\n  const postInputClasses = postInputHasError ? classes[\"invalid\"] : \"\";\n  const cityInputClasses = cityInputHasError ? classes[\"invalid\"] : \"\";\n  // form valid\n\n  let formIsValid = false;\n\n  if (\n    setEnteredNameIsValid &&\n    setEnteredStreetIsValid &&\n    setEnteredPostIsValid &&\n    setEnteredCityIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  // jsx\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control + \" \" + nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n      </div>\n      <div className={classes.control + \" \" + streetInputClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          onChange={streetChangedHandler}\n          onBlur={streetBlurHandler}\n          value={enteredStreet}\n        />\n      </div>\n      <div className={classes.control + \" \" + postInputClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal\"\n          onChange={postChangedHandler}\n          onBlur={postBlurHandler}\n          value={enteredPost}\n        />\n      </div>\n      <div className={classes.control + \" \" + cityInputClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          onChange={cityChangedHandler}\n          onBlur={cityBlurHandler}\n          value={enteredCity}\n        />\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        {formIsValid && <button className={classes.submit}>Confirm</button>}\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n","/home/matoni/code/matoni109/react-food-order-app/src/hooks/use-input.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":23},{"ruleId":"104","severity":1,"message":"108","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"109","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"109","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":13,"column":10,"nodeType":"106","messageId":"107","endLine":13,"endColumn":22},{"ruleId":"104","severity":1,"message":"111","line":72,"column":22,"nodeType":"106","messageId":"107","endLine":72,"endColumn":27},{"ruleId":"104","severity":1,"message":"112","line":48,"column":11,"nodeType":"106","messageId":"107","endLine":48,"endColumn":22},{"ruleId":"104","severity":1,"message":"108","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"113","line":9,"column":9,"nodeType":"106","messageId":"107","endLine":9,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":24,"column":11,"nodeType":"106","messageId":"107","endLine":24,"endColumn":17},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'CartContext' is defined but never used.","'isSubmitting' is assigned a value but never used.","'error' is assigned a value but never used.","'updatedItem' is assigned a value but never used.","'closeForm' is assigned a value but never used.","'values' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]